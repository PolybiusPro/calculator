{"version":3,"sources":["components/Header.jsx","components/Button.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","menu","backgroundColor","color","Header","props","classes","darkMode","React","useState","anchorEl","setAnchorEl","handleClose","className","AppBar","position","Toolbar","Typography","variant","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","Button","content","type","onButtonClick","darkDisplay","App","value","setValue","memory","setMemory","operator","setOperator","setDarkMode","handleButtonPress","num","parseFloat","toString","length","includes","align","Grid","container","spacing","item","xs","ReactDOM","render","document","getElementById"],"mappings":"6TAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLD,SAAU,GAEZE,KAAM,CACJ,mBAAoB,CAClBC,gBAAiB,OACjBC,MAAO,cAgDEC,MA1Cf,SAAgBC,GACd,IAAMC,EAAUX,IAETY,EAAYF,EAAZE,SAHa,EAKYC,IAAMC,SAAS,MAL3B,mBAKbC,EALa,KAKHC,EALG,KAWfC,EAAc,WAClBD,EAAY,OAGb,OACE,qBAAKE,UAAWP,EAAQR,KAAxB,SACE,cAACgB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWP,EAAQN,MAA5C,wBAGA,cAACmB,EAAA,EAAD,CAAYC,gBAAc,cAAcC,gBAAc,OAAOC,QAflD,SAACC,GACnBZ,EAAYY,EAAMC,gBAcwErB,MAAM,UAAzF,SACE,cAAC,IAAD,MAEF,eAAC,IAAD,CACEU,UAAWP,EAAQL,KACnBwB,GAAG,cACHf,SAAUA,EACVgB,aAAW,EACXC,KAAMC,QAAQlB,GACdmB,QAASjB,EANX,UAQE,cAACkB,EAAA,EAAD,CAAUR,QAASf,EAAnB,uBACA,cAACuB,EAAA,EAAD,CAAUR,QAASV,EAAnB,8B,MC5CGmB,MAZf,SAAgB1B,GAAO,IACb2B,EAAiC3B,EAAjC2B,QAASC,EAAwB5B,EAAxB4B,KAAMC,EAAkB7B,EAAlB6B,cAEvB,OACE,qBACErB,UAAS,iBAAsB,MAAVmB,EAAgB,OAAS,GAArC,mBACPC,GAAQ,IAAMX,QAASY,EAAcF,GAFzC,SAGEA,K,SCHArC,EAAYC,YAAW,CAC3BW,SAAS,CACPL,gBAAiB,SAEnBiC,YAAY,CACVhC,MAAO,WAiPIiC,MA7Of,WAAgB,IAAD,EACa3B,mBAAS,KADtB,mBACN4B,EADM,KACCC,EADD,OAEe7B,mBAAS,MAFxB,mBAEN8B,EAFM,KAEEC,EAFF,OAGmB/B,mBAAS,MAH5B,mBAGNgC,EAHM,KAGIC,EAHJ,OAImBjC,oBAAS,GAJ5B,mBAINF,EAJM,KAIIoC,EAJJ,KAMPrC,EAAUX,IAWViD,EAAoB,SAAAZ,GAAO,OAAI,WACnC,IAAMa,EAAMC,WAAWT,GAEvB,GAAe,OAAZL,EAID,OAHAM,EAAS,KACTE,EAAU,WACVE,EAAY,MAId,GAAe,SAAZV,EAAH,CAKA,GAAe,MAAZA,EAGD,OAFAM,GAAUO,EAAM,KAAKE,iBACrBP,EAAU,MAGZ,GAAe,MAAZR,EAoBD,OAnBgB,OAAbS,EACe,MAAbA,EACDD,EAAUD,EAASO,WAAWT,IAEX,WAAbI,EACND,EAAUD,EAASO,WAAWT,IAEX,SAAbI,EACND,EAAUD,EAASO,WAAWT,IAEX,SAAbI,GACND,EAAUD,EAASO,WAAWT,IAGhCG,EAAUM,WAAWT,IAGvBC,EAAS,UACTI,EAAY,KAGd,GAAe,WAAZV,EAoBD,OAlBgB,OAAbS,EACe,MAAbA,EACDD,EAAUD,EAASO,WAAWT,IAEX,WAAbI,EACND,EAAUD,EAASO,WAAWT,IAEX,SAAbI,EACND,EAAUD,EAASO,WAAWT,IAEX,SAAbI,GACND,EAAUD,EAASO,WAAWT,IAGhCG,EAAUM,WAAWT,IAEvBC,EAAS,UACTI,EAAY,UAGd,GAAe,SAAZV,EAoBD,OAnBgB,OAAbS,EACe,MAAbA,EACDD,EAAUD,EAASO,WAAWT,IAEX,WAAbI,EACND,EAAUD,EAASO,WAAWT,IAEX,SAAbI,EACND,EAAUD,EAASO,WAAWT,IAEX,SAAbI,GACND,EAAUD,EAASO,WAAWT,IAGhCG,EAAUM,WAAWT,IAGvBC,EAAS,UACTI,EAAY,QAGd,GAAe,SAAZV,EAmBD,OAlBgB,OAAbS,EACe,MAAbA,EACDD,EAAUD,EAASO,WAAWT,IAEX,WAAbI,EACND,EAAUD,EAASO,WAAWT,IAEX,SAAbI,EACND,EAAUD,EAASO,WAAWT,IAEX,SAAbI,GACND,EAAUD,EAASO,WAAWT,IAGhCG,EAAUM,WAAWT,IAEvBC,EAAS,UACTI,EAAY,QAId,GAAe,MAAZV,EAAH,CAOA,GAAe,MAAZA,EAAgB,CACjB,IAAIS,EAAU,OAgBd,MAdgB,MAAbA,EACDH,GAAUC,EAASO,WAAWT,IAAQU,YAEnB,WAAbN,EACNH,GAAUC,EAASO,WAAWT,IAAQU,YAEnB,SAAbN,EACNH,GAAUC,EAASO,WAAWT,IAAQU,YAEnB,SAAbN,GACNH,GAAUC,EAASO,WAAWT,IAAQU,YAExCP,EAAU,WACVE,EAAY,MAIiB,MAA5BL,EAAMA,EAAMW,OAAS,GACtBV,EAASD,EAAQL,GAEjBM,EAASQ,WAAWD,EAAMb,GAASe,gBA9BrC,CACE,GAAGV,EAAMY,SAAS,KAAM,OAExBX,EAASD,EAAQ,WApGjBC,IAAiB,EAAPO,GAAUE,cAoIxB,OACE,sBAAKlC,UAAWN,EAAWD,EAAQC,SAAW,GAA9C,UACE,cAAC,EAAD,CAAQA,SA1JgB,WAExBoC,GADc,IAAbpC,MA0JD,cAACU,EAAA,EAAD,CAAYJ,UAAS,kBAAaN,EAAWD,EAAQ6B,YAAc,IAAOe,MAAM,QAAQhC,QAAQ,KAAhG,SACGmB,IAEH,qBAAKxB,UAAU,UAAf,SACE,eAACsC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGH,MAAM,SAAlC,UACE,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,KAAKC,KAAK,eAE9D,cAACkB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,OAAIC,KAAK,eAE7D,cAACkB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,IAAIC,KAAK,eAE7D,cAACkB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,OAAKC,KAAK,eAG9D,cAACkB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,OAAKC,KAAK,eAG9D,cAACkB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,SAAKC,KAAK,eAG9D,cAACkB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,IAAKC,KAAK,eAG9D,cAACkB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,QAEpD,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAQrB,cAAeU,EAAmBZ,QAAQ,IAAKC,KAAK,wBC/OxEuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.76ed2135.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/Appbar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  menu: {\r\n    \"& .MuiPaper-root\": {\r\n      backgroundColor: \"#333\",\r\n      color: \"white\"\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nfunction Header(props){\r\n  const classes = useStyles();\r\n\r\n  const {darkMode} = props;\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n const handleClick = (event) => {\r\n   setAnchorEl(event.currentTarget);\r\n };\r\n\r\n const handleClose = () => {\r\n   setAnchorEl(null);\r\n };\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Calculator\r\n          </Typography>\r\n          <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} color=\"inherit\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Menu\r\n            className={classes.menu}\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={darkMode}>Dark Mode</MenuItem>\r\n            <MenuItem onClick={handleClose}>Close</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport '../styles/Button.css';\r\n\r\nfunction Button(props){\r\n  const { content, type, onButtonClick } = props;\r\n\r\n  return (\r\n    <div\r\n      className={`Button ${content===\"0\" ? \"zero\" : \"\"}\r\n      ${type || \"\"}`} onClick={onButtonClick(content)}\r\n    >{content}\r\n    </div>\r\n      );\r\n}\r\n\r\nexport default Button;\r\n","import './App.css';\nimport {useState} from 'react';\nimport Header from './components/Header';\nimport Button from './components/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  darkMode:{\n    backgroundColor: 'black',\n  },\n  darkDisplay:{\n    color: 'white'\n  }\n});\n\nfunction App() {\n  const [value, setValue] = useState(\"0\");\n  const [memory, setMemory] = useState(null);\n  const [operator, setOperator] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n\n  const classes = useStyles();\n\n  const handleDarkModeClick = () => {\n    if(darkMode === false){\n      setDarkMode(true);\n    }else{\n      setDarkMode(false);\n    }\n  }\n\n\n  const handleButtonPress = content => () => {\n    const num = parseFloat(value);\n\n    if(content === \"AC\"){\n      setValue(\"0\");\n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n\n    if(content === \"±\"){\n      setValue((num * -1).toString());\n      return;\n    }\n\n    if(content === \"%\"){\n      setValue((num / 100).toString());\n      setMemory(null);\n      return;\n    }\n    if(content === \"+\"){\n      if(operator !== null){\n        if(operator === \"+\"){\n          setMemory(memory + parseFloat(value));\n        }\n        else if(operator === \"−\"){\n          setMemory(memory - parseFloat(value));\n        }\n        else if(operator === \"×\"){\n          setMemory(memory * parseFloat(value));\n        }\n        else if(operator === \"÷\"){\n          setMemory(memory / parseFloat(value));\n        }\n      }else{\n        setMemory(parseFloat(value));\n      }\n\n      setValue(\"0\");\n      setOperator(\"+\");\n      return;\n    }\n    if(content === \"−\"){\n\n      if(operator !== null){\n        if(operator === \"+\"){\n          setMemory(memory + parseFloat(value));\n        }\n        else if(operator === \"−\"){\n          setMemory(memory - parseFloat(value));\n        }\n        else if(operator === \"×\"){\n          setMemory(memory * parseFloat(value));\n        }\n        else if(operator === \"÷\"){\n          setMemory(memory / parseFloat(value));\n        }\n      }else{\n        setMemory(parseFloat(value));\n      }\n      setValue(\"0\");\n      setOperator(\"−\");\n      return;\n    }\n    if(content === \"×\"){\n      if(operator !== null){\n        if(operator === \"+\"){\n          setMemory(memory + parseFloat(value));\n        }\n        else if(operator === \"−\"){\n          setMemory(memory - parseFloat(value));\n        }\n        else if(operator === \"×\"){\n          setMemory(memory * parseFloat(value));\n        }\n        else if(operator === \"÷\"){\n          setMemory(memory / parseFloat(value));\n        }\n      }else{\n        setMemory(parseFloat(value));\n      }\n\n      setValue(\"0\");\n      setOperator(\"×\");\n      return;\n    }\n    if(content === \"÷\"){\n      if(operator !== null){\n        if(operator === \"+\"){\n          setMemory(memory + parseFloat(value));\n        }\n        else if(operator === \"−\"){\n          setMemory(memory - parseFloat(value));\n        }\n        else if(operator === \"×\"){\n          setMemory(memory * parseFloat(value));\n        }\n        else if(operator === \"÷\"){\n          setMemory(memory / parseFloat(value));\n        }\n      }else{\n        setMemory(parseFloat(value));\n      }\n      setValue(\"0\");\n      setOperator(\"÷\");\n      return;\n    }\n\n    if(content === \".\"){\n      if(value.includes(\".\")) return;\n\n      setValue(value + \".\");\n      return;\n    }\n\n    if(content === \"=\"){\n      if(!operator) return;\n\n      if(operator === \"+\"){\n        setValue((memory + parseFloat(value)).toString());\n      }\n      else if(operator === \"−\"){\n        setValue((memory - parseFloat(value)).toString());\n      }\n      else if(operator === \"×\"){\n        setValue((memory * parseFloat(value)).toString());\n      }\n      else if(operator === \"÷\"){\n        setValue((memory / parseFloat(value)).toString());\n      }\n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n\n    if(value[value.length - 1] === '.'){\n      setValue(value + content);\n    }else{\n      setValue(parseFloat(num + content).toString());\n    }\n\n  }\n\n  return (\n    <div className={darkMode ? classes.darkMode : \"\" }>\n      <Header darkMode={handleDarkModeClick} />\n      <Typography className={`display ${darkMode ? classes.darkDisplay : \"\" }`} align=\"right\" variant=\"h3\">\n        {value}\n      </Typography>\n      <div className=\"buttons\">\n        <Grid container spacing={3} align=\"center\">\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"AC\" type=\"function\"/>\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"±\" type=\"function\"/>\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"%\" type=\"function\"/>\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"÷\"  type=\"operator\"/>\n          </Grid>\n\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"7\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"8\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"9\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"×\"  type=\"operator\"/>\n          </Grid>\n\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"4\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"5\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"6\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"−\"  type=\"operator\"/>\n          </Grid>\n\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"1\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"2\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"3\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"+\"  type=\"operator\"/>\n          </Grid>\n\n          <Grid item xs={6}>\n            <Button onButtonClick={handleButtonPress} content=\"0\" />\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\".\"/>\n          </Grid>\n          <Grid item xs={3}>\n            <Button onButtonClick={handleButtonPress} content=\"=\"  type=\"operator\"/>\n          </Grid>\n\n        </Grid>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}